/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.AppManager;
import Model.Player;
import Model.Propriety;
import Propriety.ProprietyCard;
import View.TwoPlayer.PlayersWindow;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos Gomez
 */
public class ShowPropriety extends javax.swing.JDialog {
    private java.awt.Frame parent;
    private Player player;
    private String name;
    private PlayersWindow window;
    /**
     * Creates new form ShowPropriety
     */
    public ShowPropriety(java.awt.Frame parent, boolean modal,int position,PlayersWindow window) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
        this.player = AppManager.INSTANCE.getPlayers(position);
        this.window = window;
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbProprieties = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtNumberOfHouse = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtHotel = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Propriety:");

        cbProprieties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProprietiesActionPerformed(evt);
            }
        });

        jButton1.setText("Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Buy House");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Buy Hotel");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Finish");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setText("Number of house:");

        txtNumberOfHouse.setEditable(false);

        jLabel3.setText("Hotel");

        txtHotel.setEditable(false);

        jLabel4.setText("Price:");

        txtPrice.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbProprieties, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrice, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(txtHotel)
                            .addComponent(txtNumberOfHouse))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbProprieties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtNumberOfHouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtHotel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        closeWindow();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void cbProprietiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProprietiesActionPerformed
        Propriety p = (Propriety) cbProprieties.getSelectedItem();
        name = p.getName();
        setHotel();
        setNumberOfHouse();
        setPrice();
    }//GEN-LAST:event_cbProprietiesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Propriety propriety = null;
        if(name.contains("Aeroporto")){
            //TODO
        }else if(name.contains("Internet")){
            //TODO
        }else if(name.contains("Telem√≥veis")){
            //TODO
        }else{
            for(Propriety p:AppManager.INSTANCE.getProprieties()){
                if(p.getName().equals(name)){
                    propriety=p;
                    ProprietyCard card = new ProprietyCard(parent,true,propriety);
                    card.setVisible(true);
                }
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for(Propriety p:AppManager.INSTANCE.getProprieties()){
            if(p.getName().equals(name)){
                if(p.getNumberOfHouse()<4){
                    showError(1);
                    break;
                }else{
                    float valor = player.getMoney();
                    
                    if(valor<p.getBuildHotel()){
                        showError(6);
                    }else{
                       p.setNumberOfHouse(0);
                       p.setHasHotel(true);
                       player.setMoney(valor-p.getBuildHotel());
                       setHotel();
                       setNumberOfHouse();
                       setPrice();
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int count=0;
        Propriety propriety = null;
        for(Propriety p:AppManager.INSTANCE.getProprieties()){
            if(p.getName().equals(name)){
                propriety=p;
                String color = p.getColor();
                
                if(color.equals("Castanho")){
                    for(Propriety p1:player.getProprieties()){
                        if(p1.getColor().equals("Castanho")){
                            count++;
                        }
                    }
                   
                    if(count ==2){
                        //Can buy house
                        if(p.getNumberOfHouse()== 4){
                            showError(4);
                        }else{
                            float valor = player.getMoney();
                            
                            if(valor<propriety.getBuildHouse()){
                                showError(5);
                            }else{
                                /*for(Propriety p1:player.getProprieties()){
                                    if(p1.getColor().equals("Castanho")){
                                        if(!p1.getName().equals(name)){
                                            
                                        }
                                    }
                                }*/
                                propriety.setNumberOfHouse(propriety.getNumberOfHouse()+1);
                                player.setMoney(valor - propriety.getBuildHouse());
                                window.setCurrentMoneyPLayer1();
                                window.setCurrentMoneyPLayer2();
                                setNumberOfHouse();
                                setPrice();
                            }
                        }
                    }else{
                        showError(2);
                    }
                }else if(color.equals("Azul Escuro")){
                    for(Propriety p1:AppManager.INSTANCE.getProprieties()){
                        if(p1.getColor().equals("Azul Escuro")){
                            count++;
                        }
                    }
                    
                    if(count ==2){
                        //Can buy house
                        if(p.getNumberOfHouse()== 4){
                            showError(4);
                        }else{
                            float valor = player.getMoney();
                            
                            if(valor<propriety.getBuildHouse()){
                                showError(5);
                            }else{
                                propriety.setNumberOfHouse(propriety.getNumberOfHouse()+1);
                                player.setMoney(valor - propriety.getBuildHouse());
                                window.setCurrentMoneyPLayer1();
                                window.setCurrentMoneyPLayer2();
                                setNumberOfHouse();
                            }
                            
                        }
                        
                    }else{
                        showError(2);
                    }
                    
                }else if(color.equals("Branco")){
                    showError(3);
                }else{
                    
                }
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbProprieties;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtHotel;
    private javax.swing.JTextField txtNumberOfHouse;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void closeWindow() {
        this.dispose();
    }

    private void init() {
        LinkedList<Propriety> listAux = new LinkedList<Propriety>();
        
        for(Propriety p:player.getProprieties()){
            listAux.add(p);
        }
        cbProprieties.setModel(new DefaultComboBoxModel(listAux.toArray()));
        Propriety p = (Propriety) cbProprieties.getSelectedItem();
        name = p.getName();
        setHotel();
        setNumberOfHouse();
        setPrice();
    }

    private void showError(int erro) {
        String message;
        switch(erro){
            case 1:
                message ="You need to have 4 house to buy a hotel";
                JOptionPane.showMessageDialog(this, message);
            break;
            case 2:
                message ="you must have all propriety of the same color to buy house";
                JOptionPane.showMessageDialog(this, message);
            break;
            case 3:
                message ="Can't buy house there";
                JOptionPane.showMessageDialog(this, message);
            break;
            case 4:
                message ="Alerady have 4 house";
                JOptionPane.showMessageDialog(this, message);
            break;
            case 5:
                message ="Player "+player.getName()+" dont have money to buy a house";
                JOptionPane.showMessageDialog(this, message);
            break;
            case 6:
                message ="Player "+player.getName()+" dont have money to buy a hotel";
                JOptionPane.showMessageDialog(this, message);
            break;
        } 
    }
    
    private void setNumberOfHouse(){
        for(Propriety p1:AppManager.INSTANCE.getProprieties()){
            if(p1.getName().equals(name)){
                txtNumberOfHouse.setText(String.valueOf(p1.getNumberOfHouse()));
            }
        }
    }
    
    private void setHotel(){
        for(Propriety p1:AppManager.INSTANCE.getProprieties()){
            if(p1.getName().equals(name)){
                if(p1.isHasHotel()){
                    txtHotel.setText("Yes");
                }else{
                    txtHotel.setText("No");
                }
                
            }
        }
    }

    private void setPrice() {
        int count = 0;
        int countAeroporto = 0;
        int countServices=0;
        int countHouses=0;
        
        String color = null;
        for(Propriety p:AppManager.INSTANCE.getProprieties()){
            if(p.getName().equals(name)){
                float million;
                if(p.isHasHotel()){
                    million = p.getHotelRental()/1000000;
                    
                    if(million >=1){
                        txtPrice.setText(String.format("%.2fM", p.getPrice()/ 1000000.0));
                    }else{
                        txtPrice.setText(String.format("%.2fK", p.getPrice()/ 1000.0));
                    } 
                }else{
                    switch(p.getNumberOfHouse()){
                        case 0:
                            for(Propriety propriety:player.getProprieties()){
                                if(propriety.getName().equals(name)){
                                    color = propriety.getColor();
                                }
                            }
                            
                            for(Propriety propriety:player.getProprieties()){
                                if(propriety.getColor().equals(color)){
                                    count++;
                                }
                                
                                if(color.equals("branco")){
                                    if(propriety.getName().contains("Aeroporto")){
                                        countAeroporto++;
                                    }else{
                                        countServices++;
                                    }
                                }
                            }
                            
                            switch (color){
                                case "Castanho":
                                    if(count != 2){
                                       million = p.getRental()/1000000;
                    
                                        if(million >=1){
                                            txtPrice.setText(String.format("%.2fM", p.getRental()/ 1000000.0));
                                        }else{
                                            txtPrice.setText(String.format("%.2fK", p.getRental()/ 1000.0));
                                        } 
                                    }else{
                                        
                                       for(Propriety propriety:player.getProprieties()){
                                            if(propriety.getColor().equals(color)){
                                                System.out.println(propriety.getNumberOfHouse());
                                                if(propriety.getNumberOfHouse()!=0){
                                                    System.out.println("TEste");
                                                    countHouses++;
                                                }
                                            }
                                       }
                                        
                                       if(countHouses!=0){
                                           million = p.getRental()/1000000;
                    
                                            if(million >=1){
                                                txtPrice.setText(String.format("%.2fM", p.getRental()/ 1000000.0));
                                            }else{
                                                txtPrice.setText(String.format("%.2fK", p.getRental()/ 1000.0));
                                            }
                                       }else{
                                           if(p.isHasHotel()){
                                               million = p.getHotelRental()/1000000;
                    
                                                if(million >=1){
                                                    txtPrice.setText(String.format("%.2fM", p.getHotelRental()/ 1000000.0));
                                                }else{
                                                    txtPrice.setText(String.format("%.2fK", p.getHotelRental()/ 1000.0));
                                                }
                                           }else{
                                               million = (p.getRental()*2)/1000000;
                    
                                                if(million >=1){
                                                    txtPrice.setText(String.format("%.2fM", (p.getRental()*2)/ 1000000.0));
                                                }else{
                                                    txtPrice.setText(String.format("%.2fK", (p.getRental()*2)/ 1000.0));
                                                }
                                           }
                                           
                                       }
                                         
                                    }
                                break;
                                case "Branco":
                                    //Aeroporto
                                    if(p.getName().contains("Aeroporto")){
                                        switch(countAeroporto){
                                            case 1:
                                                million = p.getRental()/1000000;
                    
                                                if(million >=1){
                                                    txtPrice.setText(String.format("%.2fM", p.getRental()/ 1000000.0));
                                                }else{
                                                    txtPrice.setText(String.format("%.2fK", p.getRental()/ 1000.0));
                                                }  
                                            break;
                                            case 2:
                                                million = p.getOneHouseRental()/1000000;
                    
                                                if(million >=1){
                                                    txtPrice.setText(String.format("%.2fM", p.getOneHouseRental()/ 1000000.0));
                                                }else{
                                                    txtPrice.setText(String.format("%.2fK", p.getOneHouseRental()/ 1000.0));
                                                }
                                            break;
                                            case 3:
                                                million = p.getTwoHouseRental()/1000000;
                    
                                                if(million >=1){
                                                    txtPrice.setText(String.format("%.2fM", p.getTwoHouseRental()/ 1000000.0));
                                                }else{
                                                    txtPrice.setText(String.format("%.2fK", p.getTwoHouseRental()/ 1000.0));
                                                }
                                            break;
                                            case 4:
                                                million = p.getTwoHouseRental()/1000000;
                    
                                                if(million >=1){
                                                    txtPrice.setText(String.format("%.2fM", p.getThreeHouseRental()/ 1000000.0));
                                                }else{
                                                    txtPrice.setText(String.format("%.2fK", p.getThreeHouseRental()/ 1000.0));
                                                }
                                            break;
                                        }
                                    }else{
                                        //services
                                        switch(countServices){
                                            case 1:
                                                txtPrice.setText(p.getRental() +"x number of the dice");
                                            break;
                                            case 2:
                                                txtPrice.setText(p.getOneHouseRental()+"x number of the dice");
                                            break;
                                        }
                                    }
                                break;
                                case "Azul escuro":
                                    if(count == 2){
                                        million = p.getRental()/1000000;
                    
                                        if(million >=1){
                                            txtPrice.setText(String.format("%.2fM", p.getPrice()/ 1000000.0));
                                        }else{
                                            txtPrice.setText(String.format("%.2fK", p.getPrice()/ 1000.0));
                                        } 
                                    }else{
                                         million = (p.getRental()*2)/1000000;
                    
                                        if(million >=1){
                                            txtPrice.setText(String.format("%.2fM", p.getPrice()/ 1000000.0));
                                        }else{
                                            txtPrice.setText(String.format("%.2fK", p.getPrice()/ 1000.0));
                                        }  
                                    }
                                break;
                                default:
                                    //All color
                                break;
                            }
                        break;
                        case 1:
                            million = p.getOneHouseRental()/1000000;
                    
                            if(million >=1){
                                txtPrice.setText(String.format("%.2fM", p.getOneHouseRental()/ 1000000.0));
                            }else{
                                txtPrice.setText(String.format("%.2fK", p.getOneHouseRental()/ 1000.0));
                            } 
                        break;
                        case 2:
                            million = p.getTwoHouseRental()/1000000;
                    
                            if(million >=1){
                                txtPrice.setText(String.format("%.2fM", p.getTwoHouseRental()/ 1000000.0));
                            }else{
                                txtPrice.setText(String.format("%.2fK", p.getTwoHouseRental()/ 1000.0));
                            } 
                        break;
                        case 3:
                            million = p.getThreeHouseRental()/1000000;
                    
                            if(million >=1){
                                txtPrice.setText(String.format("%.2fM", p.getThreeHouseRental()/ 1000000.0));
                            }else{
                                txtPrice.setText(String.format("%.2fK", p.getThreeHouseRental()/ 1000.0));
                            } 
                        break;
                        case 4:
                            million = p.getFourHouseRental()/1000000;
                    
                            if(million >=1){
                                txtPrice.setText(String.format("%.2fM", p.getFourHouseRental()/ 1000000.0));
                            }else{
                                txtPrice.setText(String.format("%.2fK", p.getFourHouseRental()/ 1000.0));
                            } 
                        break;
                    }
                }
              
        
                
            }
        }
        
    }
}
