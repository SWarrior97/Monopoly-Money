/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.AppManager;
import Model.Player;
import Model.Propriety;
import Propriety.ProprietyCard;
import View.FourPlayer.PlayersWindowFour;
import View.ThreePlayer.PlayersWindowThree;
import View.TwoPlayer.PlayersWindow;
import java.awt.Color;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos Gomez
 */
public class ProprietiesBuy extends javax.swing.JDialog {
    private int position;
    private Player player;
    private String name;
    private java.awt.Frame parent;
    private PlayersWindow window;
    private PlayersWindowThree windowThree;
    private PlayersWindowFour windowFour;

    /**
     * Creates new form ProprietiesBuy
     */
    public ProprietiesBuy(java.awt.Frame parent, boolean modal,int position,PlayersWindow window) {
        super(parent, modal);
        initComponents();
        this.position = position;
        this.parent = parent;
        this.window=window;
        this.player = AppManager.INSTANCE.getPlayers(position);
        init();
        
    }
    
    public ProprietiesBuy(java.awt.Frame parent, boolean modal,int position,PlayersWindowThree window) {
        super(parent, modal);
        initComponents();
        this.position = position;
        this.parent = parent;
        this.windowThree=window;
        this.player = AppManager.INSTANCE.getPlayers(position);
        init();
    }
    
    public ProprietiesBuy(java.awt.Frame parent, boolean modal,int position,PlayersWindowFour window) {
        super(parent, modal);
        initComponents();
        this.position = position;
        this.parent = parent;
        this.windowFour=window;
        this.player = AppManager.INSTANCE.getPlayers(position);
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboPropriety = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        comboPropriety.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProprietyActionPerformed(evt);
            }
        });

        jLabel30.setText("Propriety:");

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Buy");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel31.setText("Price:");

        txtPrice.setEditable(false);

        jButton3.setText("Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(268, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30)
                            .addComponent(jLabel31))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboPropriety, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboPropriety, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboProprietyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProprietyActionPerformed
        Propriety p = (Propriety) comboPropriety.getSelectedItem();
        
        float million = p.getPrice()/ 1000000;
        
        if(million >=1){
            txtPrice.setText(String.format("%.2fM", p.getPrice()/ 1000000.0));
        }else{
            txtPrice.setText(String.format("%.2fK", p.getPrice()/ 1000.0));
        }
        
        name = p.getName();
        
    }//GEN-LAST:event_comboProprietyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        closeWindow();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Propriety propriety = null;
        if(name.contains("Aeroporto")){
            //TODO
        }else if(name.contains("Internet")){
            //TODO
        }else if(name.contains("TelemÃ³veis")){
            //TODO
        }else{
            for(Propriety p:AppManager.INSTANCE.getProprieties()){
                if(p.getName().equals(name)){
                    propriety=p;
                }
            }
            ProprietyCard card = new ProprietyCard(parent,true,propriety);
            card.setVisible(true);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        float valor=0;
        for(Propriety p:AppManager.INSTANCE.getProprieties()){
                if(p.getName().equals(name)){
                    valor = p.getPrice();
                }
         }
        
        if(valor>player.getMoney()){
            showError(1);
        }else{
            float money = player.getMoney() - valor;
            player.setMoney(money);
            
            for(Propriety p:AppManager.INSTANCE.getProprieties()){
                if(p.getName().equals(name)){
                   player.addPropriety(p);
                   p.setIsOwned(true);
                   p.setOwner(player);
                   System.out.println();
                }
            }
            
            if(window == null){
               if(windowThree != null){
                    windowThree.setCurrentMoneyPLayer1();
                    windowThree.setCurrentMoneyPLayer2();
                     windowThree.setCurrentMoneyPLayer3();
               } else{
                   //janela four
                   windowFour.setCurrentMoneyPLayer1();
                   windowFour.setCurrentMoneyPLayer2();
                   windowFour.setCurrentMoneyPLayer3();
                   windowFour.setCurrentMoneyPLayer4();
               }
            }else{
                window.setCurrentMoneyPLayer1();
                window.setCurrentMoneyPLayer2();
            }
            
            closeWindow();
           
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void init() {
       LinkedList<Propriety> listAux = new LinkedList<>();
       
       for(Propriety p:AppManager.INSTANCE.getProprieties()){
           if(p.isIsOwned() == false){
               listAux.add(p);
           }
       }
       comboPropriety.setModel(new DefaultComboBoxModel(listAux.toArray()));
       
       for(Propriety p:AppManager.INSTANCE.getProprieties()){
           if(!p.isIsOwned()){
               name = p.getName();
               break;
           }
       }
       
       for(Propriety p:AppManager.INSTANCE.getProprieties()){
            if(p.getName().equals(name)){
                float million = p.getPrice()/ 1000000;
        
                if(million >=1){
                    txtPrice.setText(String.format("%.2fM", p.getPrice()/ 1000000.0));
                }else{
                    txtPrice.setText(String.format("%.2fK", p.getPrice()/ 1000.0));
                }
            }
       }
    }

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comboPropriety;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void showError(int erro) {
        String message;
        switch(erro){
            case 1:
                //Number format 
                message ="The player dont have money to buy it";
                JOptionPane.showMessageDialog(this, message);
            break;
        } 
    }

    private void closeWindow() {
        this.dispose();
    }

}
